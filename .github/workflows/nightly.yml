on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

env:
  DENO_VERSION: "1.40.2"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GHJK_LOG_PANIC_LEVEL: error

jobs:
  test-e2e:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            e2eType: "docker"
          - os: macos-latest
            e2eType: "local"
          - os: macos-14
            e2eType: "local"
          # - os: windows-latest
          #   e2eType: "local"
    env:
      GHJK_TEST_E2E_TYPE: ${{ matrix.e2eType }}
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}

      - if: "${{ matrix.os == 'macos-latest' || matrix.os == 'macos-14' }}"
        # we need coreutils on max for the `timeout` command
        run: brew install fish zsh coreutils
      - name: Cache deno dir
        if: "${{ matrix.os == 'macos-latest' || matrix.os == 'macos-14' }}"
        uses: actions/cache@v4
        with:
          path: ${{ env.GHJK_DENO_DIR }}
          key: deno-mac-${{ hashFiles('**/deno.lock') }}

      - if: "${{ matrix.e2eType == 'docker' }}"
        uses: docker/setup-buildx-action@v3
      - if: "${{ matrix.e2eType == 'docker' }}"
        uses: actions-hub/docker/cli@master
        env:
          SKIP_LOGIN: true
      
      - run: deno task test

  test-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: metatypedev/setup-ghjk@a7bbf22959e3c0f80b8ba9f800b0a9f1ff17fa7b
        with:
          installer-url: ./install.ts
        env: 
          GHJKFILE: ./examples/protoc/ghjk.ts
      - run: |
          cd examples/protoc
          . $(ghjk print share-dir-path)/env.sh
          protoc --version
