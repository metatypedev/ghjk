on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review

env:
  DENO_VERSION: "1.44.2"
  GHJK_LOG: debug
  GHJK_LOG_PANIC_LEVEL: error
  DENO_DIR: .deno-dir
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # removing the images after every test is unncessary
  DOCKER_NO_RMI: 1

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v4

  test-pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}
      # run ghjk once to avoid trigger file changes when
      # pre commit runs ghjk. We'll always see changes
      # to lock.json since GITHUB_TOKEN is different
      # in the CI
      - run: deno run --unstable -A main.ts print config
      - uses: pre-commit/action@v3.0.1
        env:
          SKIP: ghjk-resolve

  test-e2e:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/x86_64
            e2eType: "docker"
          - os: custom-arm
            platform: linux/aarch64
            e2eType: "docker"
          - os: macos-latest
            platform: darwin/x86_64
            e2eType: "local"
          - os: macos-14
            platform: darwin/aarch64
            e2eType: "local"
          # - os: windows-latest
          #   e2eType: "local"
    env:
      GHJK_TEST_E2E_TYPE: ${{ matrix.e2eType }}
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - name: Cache deno dir
        uses: actions/cache@v4
        with:
          path: ${{ env.DENO_DIR }}
          key: deno-${{ hashFiles('**/deno.lock') }}
      - if: "${{ matrix.e2eType == 'docker' }}"
        uses: docker/setup-buildx-action@v3
      - if: "${{ matrix.os == 'macos-latest' || matrix.os == 'macos-14' }}"
        # we need coreutils on max for the `timeout` command
        run: brew install fish zsh coreutils
      - env: 
          DOCKER_PLATFORM: ${{ matrix.platform }}
        run: deno task test


  test-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: metatypedev/setup-ghjk@318209a9d215f70716a4ac89dbeb9653a2deb8bc
        with:
          installer-url: ./install.ts
        env: 
          GHJKFILE: ./examples/protoc/ghjk.ts
      - run: |
          cd examples/tasks
          . $(ghjk print share-dir-path)/env.sh
          ghjk x hey
