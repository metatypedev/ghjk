name: test suite
run-name: test suite for ${{ github.event.pull_request.title || github.ref }}
on:
  workflow_dispatch:
    inputs:
      tmate_enabled:
        type: boolean
        description: |
          Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate).
          This disables all but the test-full jobs.
        required: false
        default: false
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DENO_VERSION: "2.1.2"
  GHJK_LOG: debug
  GHJK_LOG_PANIC_LEVEL: error
  DENO_DIR: .deno-dir
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v4

  test-pre-commit:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dsherret/rust-toolchain-file@v1
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}
      # run ghjk once to avoid trigger file changes when
      # pre commit runs ghjk. We'll always see changes
      # to lock.json since GITHUB_TOKEN is different
      # in the CI
      - run: deno task ghjk envs cook -t lock-sed
      - uses: pre-commit/action@v3.0.1
        env:
          SKIP: ghjk-resolve

  test-e2e:
    timeout-minutes: 60
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/x86_64
          - os: custom-arm
            platform: linux/aarch64
          - os: macos-latest
            platform: darwin/x86_64
          - os: macos-14
            platform: darwin/aarch64
          # - os: windows-latest
    steps:
      - name: Setup tmate session
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.tmate_enabled }}
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true
      - uses: actions/checkout@v4
      - uses: dsherret/rust-toolchain-file@v1
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - name: Cache deno dir
        uses: actions/cache@v4
        with:
          path: ${{ env.DENO_DIR }}
          key: deno-${{ hashFiles('**/deno.lock') }}
      - if: "${{ matrix.os == 'ubuntu-latest' || matrix.os == 'custom-arm' }}"
        # need coreutils on max for the `timeout` command
        # need cmake to build the rust deps
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends fish zsh cmake
      - if: "${{ matrix.os == 'macos-latest' || matrix.os == 'macos-14' }}"
        # need cmake to build the rust deps
        # need coreutils on max for the `timeout` command
        run: brew install fish zsh coreutils cmake
      - run: |
          deno task test-rust
          deno task test-doc
          deno task test

  # test-action:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dsherret/rust-toolchain-file@v1
  #     - uses: metatypedev/setup-ghjk@318209a9d215f70716a4ac89dbeb9653a2deb8bc
  #       with:
  #         installer-url: ./install.ts
  #       env:
  #         GHJKFILE: ./examples/protoc/ghjk.ts
  #     - run: |
  #         cd examples/tasks
  #         . $(ghjk print share-dir-path)/env.sh
  #         ghjk x hey
