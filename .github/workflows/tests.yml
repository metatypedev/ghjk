on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review

env:
  DENO_VERSION: "1.40.2"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GHJK_LOG: debug
  GHJK_LOG_PANIC_LEVEL: error

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v4

  test-pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - uses: pre-commit/action@v3.0.1

  test-e2e:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            e2eType: "docker"
          - os: macos-latest
            e2eType: "local"
          - os: macos-14
            e2eType: "local"
          # - os: windows-latest
          #   e2eType: "local"
    env:
      GHJK_TEST_E2E_TYPE: ${{ matrix.e2eType }}
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}

      - if: "${{ matrix.os == 'macos-latest' || matrix.os == 'macos-14' }}"
        # we need coreutils on max for the `timeout` command
        run: brew install fish zsh coreutils
      - name: Cache deno dir
        if: "${{ matrix.os == 'macos-latest' || matrix.os == 'macos-14' }}"
        uses: actions/cache@v4
        with:
          path: ${{ env.GHJK_DENO_DIR }}
          key: deno-mac-${{ hashFiles('**/deno.lock') }}

      - if: "${{ matrix.e2eType == 'docker' }}"
        uses: docker/setup-buildx-action@v3
      - if: "${{ matrix.e2eType == 'docker' }}"
        uses: actions-hub/docker/cli@master
        env:
          SKIP_LOGIN: true
      
      - run: deno task test

  test-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: metatypedev/setup-ghjk@32fe7ad4eab41d5e62189208afa6fe17112a5563
        with:
          installer-url: ./install.ts
        env: 
          GHJKFILE: ./examples/protoc/ghjk.ts
      - run: |
          cd examples/protoc
          . $(ghjk print share-dir-path)/env.sh
          protoc --version
